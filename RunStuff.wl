(* ::Package:: *)

(* ::Input::Initialization:: *)
(*Dialog prompt to fix in/out paths.  Can be replaced with direct path input later*)
id=ChoiceDialog[
"It's dangerous to go alone! Who are you and your computer companion?",{"Sam & Cuchulain"-> "Sam", "Sherwood & Ganon"->"Sherwood","Someone new"->"Other"}];
(*Sets the paths based on the machine pick.  The paths are global*)
 Which[id=="Sam",
 inpath="G:\\My Drive\\Physics\\Neutrino Oscillation Research\\Fast Conversions\\lotsadata.tar\\lotsadata\\lotsadata\\";
 outpath="G:\\My Drive\\Physics\\Neutrino Oscillation Research\\Fast Conversions\\stability_data\\";
 ParallelEvaluate[$ProcessorCount];
 ,
 id=="Sherwood",
 inpath="/mnt/data/SamFlynn/lotsadata/";
 outpath="/mnt/data/SamFlynn/stability_data/";
 ,
 id=="Other",
 inpath = SystemDialogInput["Directory",WindowTitle-> "Choose the folder containing the data set"];
 outpath = inpath<>"out\\";
 ];
 (*Want to implements toggle grid here to pick between the mass models and time slices.  It's easy, but definitely not a priority*)
(*
filename = "15Msun_50ms_DO";
infile = inpath<>filename<>".h5";
outfolder = outpath<>filename;
*)
(*Note: this used to contain a variable called "out_path". Be careful with the underscores; in Mathematica they are either function inputs or patterns.  If the font turn green, that's why.*)
(*Constants*)



(* ::Input:: *)
(*SetDirectory["C:\\Users\\Sam\\Documents\\GitHub\\stability_tools"]*)


(* ::Input:: *)
(*<<"StabilityPackage`"*)


(* ::Subsubsection:: *)
(*For reference:*)


<<"StabilityPackage`"
OldData={{2.61019*10^-17, 1.12835*10^-18}, {2.8674*10^-17, 
  7.11518*10^-19}, {3.14996*10^-17, 1.13532*10^-21}, {3.46036*10^-17, 
  1.12664*10^-21}, {3.80135*10^-17, 1.11669*10^-21}, {4.17594*10^-17, 
  1.10578*10^-21}, {4.58744*10^-17, 1.09417*10^-21}, {5.03949*10^-17, 
  1.08207*10^-21}, {5.53608*10^-17, 1.06968*10^-21}, {6.08162*10^-17, 
  1.05717*10^-21}, {6.68091*10^-17, 1.04469*10^-21}, {7.33925*10^-17, 
  1.03234*10^-21}, {8.06247*10^-17, 1.02023*10^-21}, {8.85695*10^-17, 
  1.00844*10^-21}, {9.72973*10^-17, 9.97028*10^-22}, {1.06885*10^-16, 
  9.86047*10^-22}, {1.17418*10^-16, 9.75532*10^-22}, {1.28988*10^-16, 
  9.78299*10^-22}, {1.41699*10^-16, 9.85668*10^-22}, {1.55662*10^-16, 
  9.92358*10^-22}, {1.71001*10^-16, 9.98434*10^-22}, {1.87852*10^-16, 
  1.00395*10^-21}, {2.06363*10^-16, 1.00897*10^-21}, {2.26698*10^-16, 
  1.01353*10^-21}, {2.49037*10^-16, 1.01767*10^-21}, {2.73577*10^-16, 
  1.02144*10^-21}, {3.00536*10^-16, 1.02487*10^-21}, {3.30151*10^-16, 
  1.02798*10^-21}, {3.62685*10^-16, 1.03082*10^-21}, {3.98424*10^-16, 
  1.03339*10^-21}, {4.37685*10^-16, 1.03574*10^-21}, {4.80815*10^-16, 
  1.03787*10^-21}, {5.28195*10^-16, 1.03981*10^-21}, {5.80244*10^-16, 
  1.04157*10^-21}, {6.37422*10^-16, 1.04318*10^-21}, {7.00235*10^-16, 
  1.04464*10^-21}, {7.69236*10^-16, 1.04597*10^-21}, {8.45038*10^-16, 
  1.04718*10^-21}, {9.28309*10^-16, 1.04828*10^-21}, {1.01979*10^-15, 
  1.04928*10^-21}, {1.12028*10^-15, 1.05019*10^-21}, {1.23067*10^-15, 
  1.05102*10^-21}, {1.35194*10^-15, 1.05178*10^-21}, {1.48516*10^-15, 
  1.05247*10^-21}, {1.63151*10^-15, 1.05309*10^-21}, {1.79228*10^-15, 
  1.05366*10^-21}, {1.9689*10^-15, 1.05418*10^-21}, {2.16292*10^-15, 
  1.05465*10^-21}, {2.37605*10^-15, 1.05508*10^-21}, {2.61019*10^-15, 
  1.05547*10^-21}, {-2.61019*10^-17, 1.44396*10^-21}, {-3.3261*10^-17,
   1.36214*10^-21}, {-4.23837*10^-17, 
  1.29781*10^-21}, {-5.40084*10^-17, 
  1.24715*10^-21}, {-6.88216*10^-17, 
  1.20722*10^-21}, {-8.76976*10^-17, 
  1.17574*10^-21}, {-1.11751*10^-16, 
  1.15093*10^-21}, {-1.42401*10^-16, 
  1.13139*10^-21}, {-1.81459*10^-16, 1.116*10^-21}, {-2.31228*10^-16, 
  1.10389*10^-21}, {-2.94648*10^-16, 
  1.09436*10^-21}, {-3.75463*10^-16, 
  1.08687*10^-21}, {-4.78443*10^-16, 
  1.08098*10^-21}, {-6.09668*10^-16, 
  1.07635*10^-21}, {-7.76884*10^-16, 
  1.07272*10^-21}, {-9.89964*10^-16, 
  1.06986*10^-21}, {-1.26149*10^-15, 
  1.06762*10^-21}, {-1.60748*10^-15, 
  1.06586*10^-21}, {-2.04837*10^-15, 
  1.06448*10^-21}, {-2.61019*10^-15, 1.06339*10^-21}};
kdebug=Block[{data,ri=200,testE=20,hi=-1,k=0,kvar},
file=inpath<>"1D_withV_withPairBrems_DO.h5";
(*SCalcScale[ImportData[inpath<>file<>".h5"],ri,testE,hi,0][[3]]//MatrixForm*)
(*buildkGrid[ImportData[inpath<>file<>".h5"],ri,testE,hi,40]*)
kAdapt[file,ri,ri,testE,hi,10]
];
ListLogPlot[{Transpose@{kdebug[[All,2]],kdebug[[All,3]]},OldData},ImageSize-> Scaled[0.65]]





(* ::Input:: *)
(*testmat[kx_]:={{2.35285*10^-16 - *)
(*   0.973907 kx, -1.33247*10^-19, -5.00894*10^-19, -1.39308*10^-18, \*)
(*-3.47641*10^-18, -8.9805*10^-18, -2.3538*10^-17, -4.91972*10^-17, \*)
(*-6.61664*10^-17, -4.37798*10^-17, 1.75717*10^-20, 1.3292*10^-19, *)
(*  5.03337*10^-19, 1.42792*10^-18, 3.74585*10^-18, 1.03934*10^-17, *)
(*  2.75442*10^-17, 5.3471*10^-17, 6.48283*10^-17, *)
(*  3.94291*10^-17}, {-5.39863*10^-20, *)
(*  2.3512*10^-16 - *)
(*   0.865063 kx, -6.10378*10^-19, -1.5068*10^-18, -3.54229*10^-18, \*)
(*-8.85341*10^-18, -2.27572*10^-17, -4.70078*10^-17, -6.27852*10^-17, \*)
(*-4.13981*10^-17, 5.37354*10^-20, 2.12377*10^-19, 6.13356*10^-19, *)
(*  1.54447*10^-18, 3.81684*10^-18, 1.02463*10^-17, 2.66305*10^-17, *)
(*  5.10914*10^-17, 6.15154*10^-17, *)
(*  3.7284*10^-17}, {-1.15959*10^-19, -3.48763*10^-19, *)
(*  2.34586*10^-16 - *)
(*   0.67941 kx, -1.70075*10^-18, -3.65467*10^-18, -8.63663*10^-18, \*)
(*-2.14255*10^-17, -4.32733*10^-17, -5.70177*10^-17, -3.73356*10^-17, *)
(*  1.1542*10^-19, 3.47907*10^-19, 8.01014*10^-19, 1.74328*10^-18, *)
(*  3.93793*10^-18, 9.99545*10^-18, 2.50721*10^-17, 4.70325*10^-17, *)
(*  5.58646*10^-17, *)
(*  3.36252*10^-17}, {-1.9808*10^-19, -5.28799*10^-19, -1.04459*10^-18, *)
(*  2.33493*10^-16 - *)
(*   0.433395 kx, -3.80358*10^-18, -8.34937*10^-18, -1.96607*10^-17, \*)
(*-3.83247*10^-17, -4.93751*10^-17, -3.19522*10^-17, 1.97159*10^-19, *)
(*  5.275*10^-19, 1.04969*10^-18, 2.00672*10^-18, 4.09838*10^-18, *)
(*  9.66299*10^-18, 2.3007*10^-17, 4.1654*10^-17, 4.83765*10^-17, *)
(*  2.87769*10^-17}, {-2.93055*10^-19, -7.37015*10^-19, \*)
(*-1.33079*10^-18, -2.25501*10^-18, *)
(*  2.31553*10^-16 - *)
(*   0.148874 kx, -8.01714*10^-18, -1.76197*10^-17, -3.26015*10^-17, \*)
(*-4.05363*10^-17, -2.57262*10^-17, 2.91693*10^-19, 7.35205*10^-19, *)
(*  1.33728*10^-18, 2.31139*10^-18, 4.28395*10^-18, 9.2785*10^-18, *)
(*  2.06186*10^-17, 3.54336*10^-17, 3.97165*10^-17, *)
(*  2.31696*10^-17}, {-3.92445*10^-19, -9.54911*10^-19, \*)
(*-1.63029*10^-18, -2.56607*10^-18, -4.15604*10^-18, *)
(*  2.27942*10^-16 + *)
(*   0.148874 kx, -1.54838*10^-17, -2.66122*10^-17, -3.12865*10^-17, \*)
(*-1.92108*10^-17, 3.90621*10^-19, 9.52565*10^-19, 1.63824*10^-18, *)
(*  2.63024*10^-18, 4.47815*10^-18, 8.87613*10^-18, 1.81192*10^-17, *)
(*  2.8924*10^-17, 3.06538*10^-17, *)
(*  1.73017*10^-17}, {-4.8742*10^-19, -1.16313*10^-18, -1.91649*10^-18, \*)
(*-2.86332*10^-18, -4.32826*10^-18, -7.33724*10^-18, *)
(*  2.22246*10^-16 + *)
(*   0.433395 kx, -2.0889*10^-17, -2.24477*10^-17, -1.29849*10^-17, *)
(*  4.85155*10^-19, 1.16027*10^-18, 1.92584*10^-18, 2.93491*10^-18, *)
(*  4.66373*10^-18, 8.49163*10^-18, 1.57308*10^-17, 2.27037*10^-17, *)
(*  2.19937*10^-17, *)
(*  1.16945*10^-17}, {-5.69541*10^-19, -1.34316*10^-18, \*)
(*-2.16395*10^-18, -3.12033*10^-18, -4.47718*10^-18, -7.04998*10^-18, \*)
(*-1.1678*10^-17, *)
(*  2.19816*10^-16 + 0.67941 kx, -1.48051*10^-17, -7.60153*10^-18, *)
(*  5.66895*10^-19, 1.33986*10^-18, 2.17451*10^-18, 3.19835*10^-18, *)
(*  4.82418*10^-18, 8.15917*10^-18, 1.36656*10^-17, 1.73252*10^-17, *)
(*  1.45057*10^-17, *)
(*  6.8461*10^-18}, {-6.31514*10^-19, -1.47903*10^-18, -2.3507*10^-18, \*)
(*-3.31429*10^-18, -4.58955*10^-18, -6.8332*10^-18, -1.03463*10^-17, \*)
(*-1.2206*10^-17, 2.2677*10^-16 + 0.865063 kx, -3.539*10^-18, *)
(*  6.28579*10^-19, 1.47539*10^-18, 2.36217*10^-18, 3.39716*10^-18, *)
(*  4.94527*10^-18, 7.90828*10^-18, 1.21072*10^-17, 1.32663*10^-17, *)
(*  8.85488*10^-18, *)
(*  3.1873*10^-18}, {-6.67846*10^-19, -1.55868*10^-18, -2.46018*10^-18, \*)
(*-3.428*10^-18, -4.65544*10^-18, -6.70611*10^-18, -9.56548*10^-18, \*)
(*-1.00166*10^-17, -5.65637*10^-18, 2.3468*10^-16 + 0.973907 kx, *)
(*  6.64743*10^-19, 1.55485*10^-18, 2.47218*10^-18, 3.51371*10^-18, *)
(*  5.01626*10^-18, 7.76119*10^-18, 1.11935*10^-17, 1.08867*10^-17, *)
(*  5.54198*10^-18, *)
(*  1.04226*10^-18}, {-1.76537*10^-20, -1.33247*10^-19, \*)
(*-5.00894*10^-19, -1.39308*10^-18, -3.47641*10^-18, -8.9805*10^-18, \*)
(*-2.3538*10^-17, -4.91972*10^-17, -6.61664*10^-17, -4.37798*10^-17, *)
(*  2.3532*10^-16 - 0.973907 kx, 1.3292*10^-19, 5.03337*10^-19, *)
(*  1.42792*10^-18, 3.74585*10^-18, 1.03934*10^-17, 2.75442*10^-17, *)
(*  5.3471*10^-17, 6.48283*10^-17, *)
(*  3.94291*10^-17}, {-5.39863*10^-20, -2.129*10^-19, -6.10378*10^-19, \*)
(*-1.5068*10^-18, -3.54229*10^-18, -8.85341*10^-18, -2.27572*10^-17, \*)
(*-4.70078*10^-17, -6.27852*10^-17, -4.13981*10^-17, 5.37354*10^-20, *)
(*  2.35545*10^-16 - 0.865063 kx, 6.13356*10^-19, 1.54447*10^-18, *)
(*  3.81684*10^-18, 1.02463*10^-17, 2.66305*10^-17, 5.10914*10^-17, *)
(*  6.15154*10^-17, *)
(*  3.7284*10^-17}, {-1.15959*10^-19, -3.48763*10^-19, -7.97126*10^-19, \*)
(*-1.70075*10^-18, -3.65467*10^-18, -8.63663*10^-18, -2.14255*10^-17, \*)
(*-4.32733*10^-17, -5.70177*10^-17, -3.73356*10^-17, 1.1542*10^-19, *)
(*  3.47907*10^-19, 2.36185*10^-16 - 0.67941 kx, 1.74328*10^-18, *)
(*  3.93793*10^-18, 9.99545*10^-18, 2.50721*10^-17, 4.70325*10^-17, *)
(*  5.58646*10^-17, *)
(*  3.36252*10^-17}, {-1.9808*10^-19, -5.28799*10^-19, -1.04459*10^-18, \*)
(*-1.95777*10^-18, -3.80358*10^-18, -8.34937*10^-18, -1.96607*10^-17, \*)
(*-3.83247*10^-17, -4.93751*10^-17, -3.19522*10^-17, 1.97159*10^-19, *)
(*  5.275*10^-19, 1.04969*10^-18, 2.37458*10^-16 - 0.433395 kx, *)
(*  4.09838*10^-18, 9.66299*10^-18, 2.3007*10^-17, 4.1654*10^-17, *)
(*  4.83765*10^-17, *)
(*  2.87769*10^-17}, {-2.93055*10^-19, -7.37015*10^-19, \*)
(*-1.33079*10^-18, -2.25501*10^-18, -3.97581*10^-18, -8.01714*10^-18, \*)
(*-1.76197*10^-17, -3.26015*10^-17, -4.05363*10^-17, -2.57262*10^-17, *)
(*  2.91693*10^-19, 7.35205*10^-19, 1.33728*10^-18, 2.31139*10^-18, *)
(*  2.39813*10^-16 - 0.148874 kx, 9.2785*10^-18, 2.06186*10^-17, *)
(*  3.54336*10^-17, 3.97165*10^-17, *)
(*  2.31696*10^-17}, {-3.92445*10^-19, -9.54911*10^-19, \*)
(*-1.63029*10^-18, -2.56607*10^-18, -4.15604*10^-18, -7.66947*10^-18, \*)
(*-1.54838*10^-17, -2.66122*10^-17, -3.12865*10^-17, -1.92108*10^-17, *)
(*  3.90621*10^-19, 9.52565*10^-19, 1.63824*10^-18, 2.63024*10^-18, *)
(*  4.47815*10^-18, 2.44487*10^-16 + 0.148874 kx, 1.81192*10^-17, *)
(*  2.8924*10^-17, 3.06538*10^-17, *)
(*  1.73017*10^-17}, {-4.8742*10^-19, -1.16313*10^-18, -1.91649*10^-18, \*)
(*-2.86332*10^-18, -4.32826*10^-18, -7.33724*10^-18, -1.34428*10^-17, \*)
(*-2.0889*10^-17, -2.24477*10^-17, -1.29849*10^-17, 4.85155*10^-19, *)
(*  1.16027*10^-18, 1.92584*10^-18, 2.93491*10^-18, 4.66373*10^-18, *)
(*  8.49163*10^-18, 2.5142*10^-16 + 0.433395 kx, 2.27037*10^-17, *)
(*  2.19937*10^-17, *)
(*  1.16945*10^-17}, {-5.69541*10^-19, -1.34316*10^-18, \*)
(*-2.16395*10^-18, -3.12033*10^-18, -4.47718*10^-18, -7.04998*10^-18, \*)
(*-1.1678*10^-17, -1.59404*10^-17, -1.48051*10^-17, -7.60153*10^-18, *)
(*  5.66895*10^-19, 1.33986*10^-18, 2.17451*10^-18, 3.19835*10^-18, *)
(*  4.82418*10^-18, 8.15917*10^-18, 1.36656*10^-17, *)
(*  2.53082*10^-16 + 0.67941 kx, 1.45057*10^-17, *)
(*  6.8461*10^-18}, {-6.31514*10^-19, -1.47903*10^-18, -2.3507*10^-18, \*)
(*-3.31429*10^-18, -4.58955*10^-18, -6.8332*10^-18, -1.03463*10^-17, \*)
(*-1.2206*10^-17, -9.03766*10^-18, -3.539*10^-18, 6.28579*10^-19, *)
(*  1.47539*10^-18, 2.36217*10^-18, 3.39716*10^-18, 4.94527*10^-18, *)
(*  7.90828*10^-18, 1.21072*10^-17, 1.32663*10^-17, *)
(*  2.44662*10^-16 + 0.865063 kx, *)
(*  3.1873*10^-18}, {-6.67846*10^-19, -1.55868*10^-18, -2.46018*10^-18, \*)
(*-3.428*10^-18, -4.65544*10^-18, -6.70611*10^-18, -9.56548*10^-18, \*)
(*-1.00166*10^-17, -5.65637*10^-18, -1.15727*10^-18, 6.64743*10^-19, *)
(*  1.55485*10^-18, 2.47218*10^-18, 3.51371*10^-18, 5.01626*10^-18, *)
(*  7.76119*10^-18, 1.11935*10^-17, 1.08867*10^-17, 5.54198*10^-18, *)
(*  2.3688*10^-16 + 0.973907 kx}};*)
(*VerificationTest[GDValue[testmat[10^-17],2.220446049250313`*^-16]*)
